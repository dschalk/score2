{"name":"Score2","tagline":"Haskell websockets up and running.","body":"# The Game of Score\r\n_An extension of github.com/jaspervdj/websockets as implemented by yesodweb/wai/wai-websockets_\r\n\r\n## Rules of \"Score\"\r\nFour dice are rolled. The default die are two six-sided, one twelve-sided, and one twenty-sided die. The goal is to make the number \"20\" in two or three steps using addition, subtraction, multiplication, division, and/or concatenation.\r\n\r\nIf a player calls out \"Score!\", or clicks \"SCORE\" in the computer version, he or she must quickly demonstrate how to make the number \"20\". Failure to do so loses the player one point; success gains a point. Clicking \"SCORE\" starts a countdown which currently allows 30 seconds, which is more than enough time if you already know a solution.\r\n\r\nIf a player clicks \"IMPOSSIBLE\", a 60-second countdown begins. If no player clicks \"SCORE\" during the 60 seconds, the player who clicked \"IMPOSSIBLE\" gains one point. If a player clicks \"SCORE\" during the countdown and succeeds in making \"20\" within 30 seconds, the player who clicked \"IMPOSSIBLE\" loses two points. It is possible for the player who clicked \"IMPOSSIBLE\" to also click \"SCORE\". Making the number \"20\" within 30 seconds gains back one of the two points lost because the 60 second countdown was successfully interrupted.\r\n\r\nIn order to gain a point by making the number \"20\", a player must use a number generated by a previous computation. Numbers generated during game play are colored red.\r\n\r\nPlayers start out in solitaire mode. Clicking \"Group A\" or \"Group B\" puts a player in competition with any other players who made the same choice. Clicking \"Player Created\" allows a player to start a new group, or to join one that another player created. Players can communicate by exchanging text messages in the chat box. Players can return to solitaire play by clicking \"Go Private\".\r\n\r\nStudents and anyone who wants to brush up on arithmetic are encouraged to look for mistakes in the computer generated lists of solutions. Does 15-(-5)=20 look right?. What about 2+(3_(4/(2/3)))=20? They are both correct. 4/(2/3) = 4_3/2 = 12/2 = 6; 3*6 = 18; and 18+2 = 20. You have to solve the innermost equations first, methodically working your way out\r\n\r\nPlayers can easily change the dice and/or the goal. There is also a place to experiment. See how you can make '20' with 9, 9, 9, and 9.\r\n\r\n## How The Game Was Developed\r\nby David Schalk\r\n\r\nI started with the chat example at github.com/wai/wai-websockets. It is Jasper Van der Jeugt 's websockets adapted to the warp web server. The routine work of the chat server is receiving messages from individual browsers and broadcasting them to all participants. The server also parses sign-in messages to make sure the format is correct and there are no duplicate player names. The server keeps a list of participants in a Haskell programming language container called an 'MVar', and replaces the list with a new, up-to-date list whenever there is a disconnect, score change, group membership change, or a new sign-in.\r\n\r\nI modified the wai-websockets chat application's participant list to include scores and group affiliations in addition to names. Whenever the list is replaced, the server broadcasts a line of text interspersed with 'br' in brackets and the prefix 'CB#$42'. The browsers intercept these messages and divert them away from the chat message section and into the scoreboard.\r\n\r\nMessage prefixes are in the format 'Cx#42' where 'x' is some capital letter. None of these go into the chat message section. They contain data and instructions controlling the flow of the game. Application messages are either Javascript strings or Haskell Text. Browsers split comma-separated strings arriving at the browser into an array named \"gameArray\", and distribute the elements according to their prefixes. The prefix is the first item in gameArray; i.e., gameArray[0]. gameArray[1] is the name of the sender's group, and gameArray[2] is the sender's name. The other array items vary according to the purpose of the message. Scoreboard messages, which are prefixed by 'CB#$42', contain items separated by HTML line break code rather than commas. Everything after the prefix is formatted HTML, ready for insertion in the score board display, so there is no need for the gameArray list corresponding to prefix 'CB#$42'.\r\n\r\n_See_ https://www.fpcomplete.com/user/dschalk/Websockets%20Game%20of%20Score for further details.\r\n\r\n[GAME DETAILS](https://www.fpcomplete.com/user/dschalk/Websockets%20Game%20of%20Score)\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}